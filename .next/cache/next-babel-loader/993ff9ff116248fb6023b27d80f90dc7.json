{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nexport function parseTime(time, cFormat) {\n  if (arguments.length === 0) {\n    return null;\n  }\n\n  var format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n  var date;\n\n  if (typeof time === 'object') {\n    date = time;\n  } else {\n    if (('' + time).length === 10) time = _parseInt(time) * 1000;\n    if (time && typeof time === 'string' && !time.includes('Z')) time = time.replace(new RegExp(/-/gm), '/');\n    date = new Date(time);\n  }\n\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, function (result, key) {\n    var value = formatObj[key];\n    if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1];\n\n    if (result.length > 0 && value < 10) {\n      value = '0' + value;\n    }\n\n    return value || 0;\n  });\n  return time_str;\n}","map":{"version":3,"sources":["D:\\abfront\\utils\\index.js"],"names":["parseTime","time","cFormat","arguments","length","format","date","includes","replace","RegExp","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","time_str","result","key","value"],"mappings":";AAAA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;AACvC,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AACD,MAAMC,MAAM,GAAGH,OAAO,IAAI,yBAA1B;AACA,MAAII,IAAJ;;AACA,MAAI,OAAOL,IAAP,KAAgB,QAApB,EAA8B;AAC5BK,IAAAA,IAAI,GAAGL,IAAP;AACD,GAFD,MAEO;AACL,QAAI,CAAC,KAAKA,IAAN,EAAYG,MAAZ,KAAuB,EAA3B,EAA+BH,IAAI,GAAG,UAASA,IAAT,IAAiB,IAAxB;AAC/B,QAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACA,IAAI,CAACM,QAAL,CAAc,GAAd,CAAzC,EAA6DN,IAAI,GAAGA,IAAI,CAACO,OAAL,CAAa,IAAIC,MAAJ,CAAW,KAAX,CAAb,EAAgC,GAAhC,CAAP;AAC7DH,IAAAA,IAAI,GAAG,IAAII,IAAJ,CAAST,IAAT,CAAP;AACD;;AACD,MAAMU,SAAS,GAAG;AAChBC,IAAAA,CAAC,EAAEN,IAAI,CAACO,WAAL,EADa;AAEhBC,IAAAA,CAAC,EAAER,IAAI,CAACS,QAAL,KAAkB,CAFL;AAGhBC,IAAAA,CAAC,EAAEV,IAAI,CAACW,OAAL,EAHa;AAIhBC,IAAAA,CAAC,EAAEZ,IAAI,CAACa,QAAL,EAJa;AAKhBC,IAAAA,CAAC,EAAEd,IAAI,CAACe,UAAL,EALa;AAMhBC,IAAAA,CAAC,EAAEhB,IAAI,CAACiB,UAAL,EANa;AAOhBC,IAAAA,CAAC,EAAElB,IAAI,CAACmB,MAAL;AAPa,GAAlB;AASA,MAAMC,QAAQ,GAAGrB,MAAM,CAACG,OAAP,CAAe,qBAAf,EAAsC,UAACmB,MAAD,EAASC,GAAT,EAAiB;AACtE,QAAIC,KAAK,GAAGlB,SAAS,CAACiB,GAAD,CAArB;AACA,QAAIA,GAAG,KAAK,GAAZ,EAAiB,OAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoCC,KAAK,GAAG,CAA5C,CAAP;;AACjB,QAAIF,MAAM,CAACvB,MAAP,GAAgB,CAAhB,IAAqByB,KAAK,GAAG,EAAjC,EAAqC;AACnCA,MAAAA,KAAK,GAAG,MAAMA,KAAd;AACD;;AACD,WAAOA,KAAK,IAAI,CAAhB;AACD,GAPgB,CAAjB;AAQA,SAAOH,QAAP;AACD","sourcesContent":["export function parseTime(time, cFormat) {\r\n  if (arguments.length === 0) {\r\n    return null\r\n  }\r\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\r\n  let date\r\n  if (typeof time === 'object') {\r\n    date = time\r\n  } else {\r\n    if (('' + time).length === 10) time = parseInt(time) * 1000\r\n    if (time && typeof time === 'string' && !time.includes('Z')) time = time.replace(new RegExp(/-/gm), '/')\r\n    date = new Date(time)\r\n  }\r\n  const formatObj = {\r\n    y: date.getFullYear(),\r\n    m: date.getMonth() + 1,\r\n    d: date.getDate(),\r\n    h: date.getHours(),\r\n    i: date.getMinutes(),\r\n    s: date.getSeconds(),\r\n    a: date.getDay()\r\n  }\r\n  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\r\n    let value = formatObj[key]\r\n    if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1]\r\n    if (result.length > 0 && value < 10) {\r\n      value = '0' + value\r\n    }\r\n    return value || 0\r\n  })\r\n  return time_str\r\n}"]},"metadata":{},"sourceType":"module"}